terraform {
  required_version = ">= 1.0.4"
}

provider "google" {
  project = var.project_id
  region  = var.region
}

terraform {
  backend "gcs" {
    bucket = var.backend_bucket
    prefix = "terraform/state"
  }
}

resource "google_compute_network" "vpc_network" {
  name                    = "vpc-network"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "subnet" {
  for_each = {
    subnet-1 = "10.0.0.0/24"
  }

  name          = each.key
  ip_cidr_range = each.value
  network       = google_compute_network.vpc_network.self_link
}

variable "instances" {
  default = {
    "vm-1" = "e2-medium"
    "vm-2" = "e2-small"
  }
}

resource "google_compute_instance" "instance" {
  for_each = var.instances

  name         = each.key
  machine_type = each.value
  zone         = "us-central1-a"
  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
    network = google_compute_network.vpc_network.self_link
    access_config {
      // Ephemeral IP
    }
  }

  metadata_startup_script = "#!/bin/bash\necho 'Hello, World!' > /var/www/html/index.html"
}

resource "google_project_service" "cloudbilling" {
  for_each = {
    "cloudbilling" = "cloudbilling.googleapis.com"
  }

  service = each.value
}

resource "google_billing_account_iam_binding" "notifications" {
  for_each = {
    "user:<USER_EMAIL>"  = "user:<USER_EMAIL>",
    "group:<GROUP_EMAIL>" = "group:<GROUP_EMAIL>",
  }

  billing_account_id = "<BILLING_ACCOUNT_ID>"
  role               = "roles/billing.user"
  members            = [each.value]
}

resource "google_billing_budget" "budget" {
  for_each = {
    budget = {
      display_name = "Budget"
      budget_filter {
        projects = ["<PROJECT_ID>"]
      }
      amount {
        specified_amount {
          currency_code = "USD"
          units         = "100"
        }
        // Change to use percentage instead of specified amount
        // percent = "80"
      }
      threshold_rules {
        threshold_percent = 0.5
        // Send an alert email when the budget reaches 50% of its limit
        spend_basis = "CURRENT_SPEND"
        email_recipients = [
          google_billing_account_iam_binding.notifications["user:<USER_EMAIL>"].members[0],
          google_billing_account_iam_binding.notifications["group:<GROUP_EMAIL>"].members[0],
        ]
      }
    }
  }

  display_name = each.value.display_name
  budget_filter {
    projects = each.value.budget_filter.projects
  }
  amount {
    specified_amount {
      currency_code = each.value.amount.specified_amount.currency_code
      units         = each.value.amount.specified_amount.units
    }
    percent = each.value.amount.percent
  }
  threshold_rules {
    threshold_percent = each.value.threshold_rules.threshold_percent
    spend_basis        = each.value.threshold_rules.spend_basis
    email_recipients = [
      "<USER_EMAIL>",
      "<GROUP_EMAIL>",
    ]
  }
}